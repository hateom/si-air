#include "mod_camshift_opencv.h"
#include "../../module_base/src/status_codes.h"

//////////////////////////////////////////////////////////////////////////

#define MIN( A, B ) (A)<(B)?(A):(B)

//////////////////////////////////////////////////////////////////////////

mod_camshift_opencv::mod_camshift_opencv() : alloc_mem(0L)
{
	REG_PARAM( PT_FLOAT, factor, "zmienna", 1.0f );
}

//////////////////////////////////////////////////////////////////////////

mod_camshift_opencv::~mod_camshift_opencv()
{

}

//////////////////////////////////////////////////////////////////////////

const char * mod_camshift_opencv::get_module_description()
{
	static char descritpion[] = "Object Tracking Module : OpenCV implementation";
	return( descritpion );
}	


//////////////////////////////////////////////////////////////////////////

int mod_camshift_opencv::init()
{
	return( ST_OK );
}

//////////////////////////////////////////////////////////////////////////

void mod_camshift_opencv::free()
{

}

//////////////////////////////////////////////////////////////////////////

int mod_camshift_opencv::get_module_type()
{
	return( MT_POSGEST );
}

//////////////////////////////////////////////////////////////////////////

int mod_camshift_opencv::input_type()
{
	return( MT_FRAME );
}

//////////////////////////////////////////////////////////////////////////

int mod_camshift_opencv::output_type()
{
	return( MT_FRAME );
}

//////////////////////////////////////////////////////////////////////////

proc_data * mod_camshift_opencv::process_frame( proc_data * prev_frame, int * result )
{
	return NULL;
}

//////////////////////////////////////////////////////////////////////////
/// export funkcji exportujacej

#ifdef __cplusplus
extern "C" {
#endif

	//////////////////////////////////////////////////////////////////////////

	__declspec(dllexport) moduleBase * export_module()
	{
		return( new mod_camshift_opencv );
	}

	//////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus
};
#endif

//////////////////////////////////////////////////////////////////////////